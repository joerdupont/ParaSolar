from pyfirmata import Arduino,util
import time
import random
board = pyfirmata.Arduino('COM3')

class house:
    def _init_(self):
        self.supply = 'main Generator'
        self.price = 0
        self.state = 'seller'
        self.firstrelay = 0
        self.secondrelay = 0
        self.load = 100
        self.bankaccount = 5000
    
house1 = house()
house1.supply = 'own battery'
house1.price = 0
house1.state = 'seller'
house1.firstrelay = 7
house1.secondrelay = 8
    
house2 = house()
house2.supply = 'own battery'
house2.price = 0
house2.state = 'seller'
house2.firstrelay = 5
house2.secondrelay = 6
house2.load = 90
    
house3 = house()
house3.supply = 'own battery'
house3.price = 50
house3.state = 'buyer'
house3.firstrelay = 3
house3.secondrelay = 4
house3.load = 25    
    
house4 = house()
house4.supply = 'own battery'
house4.price = 100
house4.state = 'buyer'
house4.firstrelay = 1
house4.secondrelay = 2
house4.load = 0
    
    
        
    def connect_to_solar(self):
            first_relay_to_change = self.firstrelay
            second_relay_to_change = self.secondrelay
            board.digital[first_relay_to_change].write(0)   #turns the first relay on
            board.digital[second_relay_to_change].write(0)  #turns the second relay on  
            self.supply = 'own battery'
            
    def connect_to_main(self):
            first_relay_to_change = self.firstrelay
            second_relay_to_change = self.secondrelay
            board.digital[first_relay_to_change].write(1)   #turns the first relay off
            board.digital[second_relay_to_change].write(1)  #turns the second relay off 
            self.supply = 'main generator'
            
    def connect_to_other_house(self):
            first_relay_to_change = self.firstrelay
            second_relay_to_change = self.secondrelay
            board.digital[first_relay_to_change].write(0)   #turns the first relay on
            board.digital[second_relay_to_change].write(1)  #turns the second relay off  
            self.supply = 'exchange'
            
    def price_comparison():
        liste = [house1,house2,house3,house4]
        a = liste[0].price
        k = 0
        for i in range(1, len(liste)):
                if liste[i]>a:
                    a = liste[i]
                    k = i
        return(liste[k]) 
    
    def bigger_load:
        liste = [house1,house2,house3,house4]
        a = liste[0].load
        k = 0
        for i in range(1, len(liste)):
                if liste[i]>a:
                    a = liste[i]
                    k = i
        return(liste[k]) 
        
                    
                    
    def connect_2_houses(self,other):
        self.connect_to_other_house
        other.connect_to_other_house
        
        
class Event:
    def _init_(self):
        self.time = 0   #time in minutes
        self.house = 'house1'
        self.loadusage = 4    #usage of load in percentages of battery
        
    def define_event_random(self):
        self.time = random.randint(0, 1080)
        self.house = random.choice(['house1','house2','house3','house4'])
        self.loadusage = random.randint(1,40)
        
class list_events:
    def _init_(self):
        self.list_events = []
 

    
class dispatcher:
    self.list_events = []
    
    def add_events_from_lists(self, _list_event):
        for i in range (0,len(list_event))
        self.list_events.append(list_event[i])
        self.list_events.sort(key=lambda x: x.time, reverse=False)
            
        
dispatcher1 = dispatcher() 

Take_a_shower = Event()
Take_a_shower = 
dispatcher1.add_events_from_lists(list_event1)
dispatcher1.add_events_from_lists(list_event2)
dispatcher1.add_events_from_lists(list_event3)
dispatcher1.add_events_from_lists(list_event4)
